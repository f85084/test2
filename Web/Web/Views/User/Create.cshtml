@model Library.User
@{
    int? UserClass = 1;
}
<div class="row">
    <div class="table-responsive">
        <h2>建立會員</h2>



        @using (Html.BeginForm("Create", "User"))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("UserAccount", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserAccount)
                        <span style="color:red">@ViewBag.Msg</span>
                        @Html.ValidationMessageFor(model => model.UserAccount, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (UserClass == 0 || UserClass == null)
                {
                    <div class="form-group">
                        @Html.Label("UserClass", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("UserClass", new List<SelectListItem>
                                        {
                                            new SelectListItem{Text = "管理員", Value = "0"},
                                            new SelectListItem{Text = "一般使用者", Value = "1"}
                                        }, "請選擇會員身分")
                            @Html.ValidationMessageFor(model => model.UserClass, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    @Html.Hidden("UserClass", "1")
                }
                <div class="form-group">
                    @Html.Label("Email", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email)
                        @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Password", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Password("Password", "", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.Label("RePassword", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Password("RePassword", "", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("UserName", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName)
                        @*@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (UserClass == 0)
                {
                    <div class="form-group">
                        @Html.Label("Delete", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Delete", new List<SelectListItem>
                                        {
                                            new SelectListItem{Text = "顯示", Value = "false"},
                                            new SelectListItem{Text = "刪除", Value = "true"}
                                        }, "會員狀態")
                            @Html.ValidationMessageFor(model => model.Delete, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    @Html.Hidden("Delete", "false")
                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="建立" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
        @if (UserClass == 0)
        {
            <div>
                @Html.ActionLink("回到列表", "Index")
            </div>
        }
    </div>
</div>